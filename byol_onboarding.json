{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "f5Name": {
      "type": "string"
    },
    "numberOFBIGIPs": {
      "type": "int"      
    },
    "licenseKeys" : {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "cluster" : {
      "type": "string"
    }
  },
  "variables": {
    "f5CloudLibsTag": "v3.2.0",
    "licenseKeys" : "[split(parameters('licenseKeys'),';')]",
    "mgmtNICNamePrefix": "[concat(parameters('f5Name'),'-mgmtnic')]",
    "externalNICNamePrefix": "[concat(parameters('f5Name'),'-externalnic')]",
    "udrNICNamePrefix": "[concat(parameters('f5Name'),'-udrnic')]",    
    "singleQuote": "'", 
    "slash": "\\",
    "verifyHash": "[concat(variables('singleQuote'), 'cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) 489d460d2e5fcd401ce12f19b1d753a6bee30483cd0bf2b7548b7f8fe3caf5b727af96f013733cbd08b0c109e0cf535a29288d473b84cc834369204d5be5edc9\n            set hashes(f5-cloud-libs-aws.tar.gz) 0b602d069a6647e8268c7afc5201259058c4df545cdee5212bf1f6c2d24b11421201282c11e047b1df9b144a012312de45a07fcf28bd0d8cd3d3a86698774925\n            set hashes(f5-cloud-libs-azure.tar.gz) 16d2ce2086883ed5b47a3ba4e79541fd1a4bb64513222cf3a459297c2474d0bfc71a161ba2b8571707e1a6b273badaaf2c847993d0e60a4b52cd8c62cb03aba6\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 4db3176b45913a5e7ccf42ab9c7ac9d7de115cdbd030b9e735946f92456b6eb433087ed0e98ac4981c76d475cd38f4de49cd98c063e13d50328a270e5b3daa4a\n            set hashes(f5.policy_creator.tmpl) 54d265e0a573d3ae99864adf4e054b293644e48a54de1e19e8a6826aa32ab03bd04c7255fd9c980c3673e9cd326b0ced513665a91367add1866875e5ef3c4e3a\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature prKQi8FeX98kCcFaMwIdwgYADdAjZo6iNTnnckguwe5IVysTEVe4vR2HPLJlDzU25dU17sQvDNIX52K0VYN4LEkAuSMeMTmr2LnlRWcGEJ4YUo9lKMdKzMzJaznlScwaR4P5mEdJC0ygq8jinOIlkauLbqmAElNtxWpb+XLnR2R83vMl/y9/LGxCxrvqE3ZuXvyuKqpAlhS+AN5ZQBDFvlTgQi52KJWpw+3i7oalz5dsjbAs2gRARtZ57Pa8OD5Oz54Q1UDxuzPVNH+CY4vt93JKmduMBsT3F41RUFDmRzosjmBY/Ic9O7oLVlKwOusDeqqqlfOM5CxcVMXwB3oxxQ==\n    signing-key /Common/f5-irule\n}', variables('singleQuote'))]", 
    "installCloudLibs": "[concat(variables('singleQuote'), '#!/bin/bash\necho about to execute\nchecks=0\nwhile [ $checks -lt 120 ]; do echo checking mcpd\n/usr/bin/tmsh -a show sys mcp-state field-fmt | grep -q running\nif [ $? == 0 ]; then\necho mcpd ready\nbreak\nfi\necho mcpd not ready yet\nlet checks=checks+1\nsleep 1\ndone\necho loading verifyHash script\n/usr/bin/tmsh load sys config merge file /config/verifyHash\nif [ $? != 0 ]; then\necho cannot validate signature of /config/verifyHash\nexit\nfi\necho loaded verifyHash\necho verifying f5-cloud-libs.tar.gz\n/usr/bin/tmsh run cli script verifyHash /config/cloud/f5-cloud-libs.tar.gz\nif [ $? != 0 ]; then\necho f5-cloud-libs.tar.gz is not valid\nexit\nfi\necho verified f5-cloud-libs.tar.gz\necho expanding f5-cloud-libs.tar.gz\ntar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud\ntouch /config/cloud/cloudLibsReady', variables('singleQuote'))]",
    "my_start": "[concat(variables('singleQuote'), '#!/bin/bash\n ###########################################################################\n ##       ffff55555                                                       ##\n ##     ffffffff555555                                                    ##\n ##   fff      f5    55         Deployment Script Version 0.0.1           ##\n ##  ff    fffff     555                                                  ##\n ##  ff    fffff f555555                                                  ##\n ## fff       f  f5555555             Written By: EIS Consulting          ##\n ## f        ff  f5555555                                                 ##\n ## fff   ffff       f555             Date Created: 12/14/2016            ##\n ## fff    fff5555    555             Last Updated: 12/14/2016            ##\n ##  ff    fff 55555  55                                                  ##\n ##   f    fff  555   5       This script will start the pre-configured   ##\n ##   f    fff       55       WAF configuration.                          ##\n ##    ffffffff5555555                                                    ##\n ##       fffffff55                                                       ##\n ###########################################################################\n ###########################################################################\n ##                              Change Log                               ##\n ###########################################################################\n ## Version #     Name       #                    NOTES                   ##\n ###########################################################################\n ## 12/14/16#  Thomas Stanley#    Created base functionality              ##\n ###########################################################################\n \n ### Parameter Legend  ###\n ## cluster\n ## external IP address\n ## hostname\n ## location\n ## licenseKeys\n ## mgmt IP address\n ## port\n ## udr IP address\n \n while getopts \":c:e:h:l:k:m:o:u:\" opt; do\n   case $opt in\n     c)\n       cluster=$OPTARG\n       ;;\n     e)\n       externalip=$OPTARG\n       ;;\n     h)\n       hostname=$OPTARG\n       ;;\n     l)\n       location=$OPTARG\n       ;;\n     k)\n       licenseKey=$OPTARG\n       ;;\n     m)\n       mgmtip=$OPTARG\n       ;;\n     o)\n       port=$OPTARG\n       ;;\n     u)\n       udrip=$OPTARG\n       ;;\n   esac\n done\n \n ## Get the Default Gateway IP address of this device.\n \n mydg=$(echo ${externalip%?})\n mydg=\"${mydg}1\"\n \n lastchar=$(echo ${hostname: -1})\n \n master=$(echo ${hostname%?})\n master=\"${master}0\"\n \n ## Execute the CloudLibs\n \n /usr/bin/f5-rest-node /config/cloud/f5-cloud-libs/scripts/onboard.js --output /var/log/onboard.log --log-level debug --host ${mgmtip} --port ${port} -u admin --password-url file:///config/cloud/passwd --hostname ${hostname}.${location}.cloudapp.azure.com --license ${licenseKey} --ntp pool.ntp.org --db tmm.maxremoteloglength:2048 --module ltm:nominal --no-reboot --signal ONBOARD_DONE &\n /usr/bin/f5-rest-node /config/cloud/f5-cloud-libs/scripts/network.js --wait-for ONBOARD_DONE --output /var/log/network.log --log-level debug --host ${mgmtip} --port ${port} -u admin --password-url file:///config/cloud/passwd --default-gw ${mydg} --vlan name:external,nic:1.1 --vlan name:internal,nic:1.2 --self-ip name:external_ip,address:${externalip},vlan:external --self-ip name:internal_ip,address:${internalip},vlan:internal --signal NETWORK_DONE &\n \n if [ ${cluster} == \"Yes\" ]; then\n     if [ ${lastchar} == \"0\" ]; then\n         /usr/bin/f5-rest-node /config/cloud/f5-cloud-libs/scripts/cluster.js --wait-for NETWORK_DONE --output /var/log/cluster.log --log-level debug --host ${mgmtip} --port ${port} -u admin --password-url file:///config/cloud/passwd --config-sync-ip ${udrip} --create-group --device-group Sync --sync-type sync-only --device ${hostname}.${location}.cloudapp.azure.com --auto-sync --save-on-auto-sync &\n     else\n         mastermgmtip=$(ping -c 1 ${master} | awk -F',variables('singleQuote'),variables('slash'),variables('singleQuote'),variables('singleQuote'),'[ :]',variables('singleQuote'),variables('slash'),variables('singleQuote'),variables('singleQuote'),' ',variables('singleQuote'),variables('slash'),variables('singleQuote'),variables('singleQuote'),'NR==2 { print $4 }',variables('singleQuote'),variables('slash'),variables('singleQuote'),variables('singleQuote'),')\n         /usr/bin/f5-rest-node /config/cloud/f5-cloud-libs/scripts/cluster.js --wait-for NETWORK_DONE --output /var/log/cluster.log --log-level debug --host ${mgmtip} --port ${port} -u admin --password-url file:///config/cloud/passwd --config-sync-ip ${udrip} --join-group --remote-host ${mastermgmtip} --remote-user admin --remote-password-url file:///config/cloud/passwd --remote-port ${port} --device-group Sync --sync &\n     fi\n fi\n wait\n \n ## Fix for v12 API disconnect\n if [ ${version} == \"12.1.2\" ]; then\n   route add 168.63.129.16/32 gw ${mgmtdg}\n fi\n \n rm -f /config/cloud/passwd\n',variables('singleQuote'))]"
  },
  "resources": [ 
      {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('f5name'),copyIndex(),'/byol_start')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "copy": {
        "count": "[parameters('numberOFBIGIPs')]",
        "name": "vmcopy"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "settings": {
          "fileUris": [
             "[concat('https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/', variables('f5CloudLibsTag'), '/dist/f5-cloud-libs.tar.gz')]"
          ]
        },
      "protectedSettings": {
          "commandToExecute": "[concat('mkdir /config/cloud && cp f5-cloud-libs.tar.gz* /config/cloud; /usr/bin/install -b -m 755 /dev/null /config/verifyHash; /usr/bin/install -b -m 755 /dev/null /config/installCloudLibs.sh; /usr/bin/install -b -m 400 /dev/null /config/cloud/passwd; /usr/bin/install -b -m 755 /dev/null /config/cloud/hourly_start.sh; IFS=', variables('singleQuote'), '%', variables('singleQuote'), '; echo -e ', variables('verifyHash'), ' >> /config/verifyHash; echo -e ', variables('installCloudLibs'), ' >> /config/installCloudLibs.sh; echo ', variables('singleQuote'), parameters('adminPassword'), variables('singleQuote'), ' >> /config/cloud/passwd; echo -e ', variables('my_start'), ' >> /config/cloud/hourly_start.sh; unset IFS; bash /config/installCloudLibs.sh; bash /config/cloud/hourly_start.sh ','-c ',parameters('cluster'),' -e ',reference(resourceId('Microsoft.Network/networkInterfaces',concat(variables('externalNICNamePrefix'),copyIndex())),'2016-09-01').ipConfigurations[0].properties.privateIPAddress,' -h ', parameters('f5Name'), copyIndex(),' -l ',resourceGroup().location,' -k ',variables('licenseKeys')[copyIndex()], ' -m ',reference(resourceId('Microsoft.Network/networkInterfaces',concat(variables('mgmtNICNamePrefix'),copyIndex())),'2016-09-01').ipConfigurations[0].properties.privateIPAddress,' -o 443 ', ' -u ',reference(resourceId('Microsoft.Network/networkInterfaces',concat(variables('udrNICNamePrefix'),copyIndex())),'2016-09-01').ipConfigurations[0].properties.privateIPAddress)]"
        }
        }
      }            
  ]
}